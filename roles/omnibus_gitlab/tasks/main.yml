# SPDX-FileCopyrightText: 2020 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2020 Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

---

- name: Set OS distribution dependent variables
  ansible.builtin.include_vars: "{{ ansible_facts.distribution }}.yml"

- name: Generate self-signed keys
  ansible.builtin.import_tasks: self-signed-keys.yml
  become: true
  when: generate_self_signed_keys | default(false) == true


- name: Check whether gitlab-rails binary is installed
  ansible.builtin.stat:
    path: "/usr/bin/gitlab-rails"
  register: gitlab_rails_binary

- name: Determine if this is an initial dry-run
  ansible.builtin.set_fact:
    gitlab_is_initial_dryrun: "{{ ansible_check_mode and not gitlab_rails_binary.stat.exists }}"

- name: Check if a previous reconfigure had failed
  ansible.builtin.stat:
    path: /etc/gitlab/reconfigure_failed
  register: gitlab_reconfigure_failed

- name: Reconfigure GitLab
  ansible.builtin.import_tasks: reconfigure.yml
  become: true
  when: gitlab_reconfigure_failed.stat.exists

- name: Install GitLab
  ansible.builtin.import_tasks: install.yml
  become: true

- name: Install custom hooks
  ansible.builtin.import_tasks: custom-hooks.yml
  become: true

- name: Configure GitLab
  ansible.builtin.import_tasks: configure.yml
  become: true

- name: "Check if GitLab is already configured"
  ansible.builtin.stat:
    path: "/opt/gitlab/etc/gitlab-rails-rc"
  register: "gitlab_rails_rc"

- name: "Force all notified handlers to run at this point. Required for feature flags."
  ansible.builtin.meta: "flush_handlers"
  when: "not gitlab_rails_rc.stat.exists and gitlab_feature_flags | length > 0"

- name: "Set feature flags"
  ansible.builtin.include_tasks: "feature-flag.yml"
  loop: "{{ gitlab_feature_flags }}"
  loop_control:
    loop_var: "gitlab_feature_flag"

...
